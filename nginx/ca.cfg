server {
        listen 80 default_server;
        listen [::]:80 default_server;
        #server_name default_server;
        root /var/www/ca;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;
        #return 301 https://$host$request_uri;
        location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
        }
}

server {
        # SSL configuration
        #
        listen 443 ssl default_server;

        # SSL protocols TLSv1.2 is the only one allowed. Disabled SSLv1~3 and TLSv1~1.1
        ssl_protocols TLSv1.2;

        ## Size Limits & Buffer Overflows
        ## the size may be configured based on the needs.
        client_body_buffer_size  100K;
        client_header_buffer_size 1k;
        client_max_body_size 100k;
        large_client_header_buffers 2 1k;

        # X-Frame-Options is to prevent from clickJacking attack
        add_header X-Frame-Options SAMEORIGIN;

        #  disable content-type sniffing on some browsers.
        add_header X-Content-Type-Options nosniff;

        # This header enables the Cross-site scripting (XSS) filter
        add_header X-XSS-Protection "1; mode=block";

        # Block bots
        add_header X-Robots-Tag none;

        ## Only GET, Post, PUT are allowed##
        if ($request_method !~ ^(GET|PUT|POST)$ ) {
            return 444;
        }
        ## In this case, it does not accept other HTTP method such as HEAD, DELETE, SEARCH, TRACE ##

        # This will enforce HTTP browsing into HTTPS and avoid ssl stripping attack
        #add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

        ssl_prefer_server_ciphers on;

        # This needs to be generated somehow to be used
        #ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off; # Requires nginx >= 1.5.9
        #ssl_stapling on; # Requires nginx >= 1.3.7
        #ssl_stapling_verify on; # Requires nginx => 1.3.7

        # Display nginx Version number in error or http header may result in hacker to search for known vulnerability.
        # Therefore, the version number should be removed for every http response.
        server_tokens off;
        ## Timeouts definition ##
        client_body_timeout   10;
        client_header_timeout 10;
        keepalive_timeout     5 5;
        send_timeout          10;
        ## End ##

        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        # Disable the line below to knock out the self-signed cert
        include snippets/snakeoil.conf;
        # Enable the two below once you have added your purchased SSL cert and configure them appropriately
        #ssl_certificate /etc/ssl/certs/mycert.cer;
        #ssl_certificate_key /etc/ssl/private/mycert.key;

        #server_name default_server;

        location / {
            proxy_pass https://127.0.0.1:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
}